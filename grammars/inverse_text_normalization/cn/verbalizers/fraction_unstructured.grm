import 'common/byte.grm' as b;
import 'common/util.grm' as u;

graph_numerator = (b.kDigit)+;

graph_denominator = (b.kDigit)+;

# i.e. token { fraction { numerator: "12" frac: "/" denominator: "13" } } ==> 12/13
# Note that 'token { fraction { numerator: "12" frac: "/" denominator: "13" } }' is
# generated by taggers/fraction_structured.grm and reordered in TextProcessor::ParseAndReorder()
graph_fraction = (
  (u.delete_space)
  (u.Delete["token { fraction { numerator: \""])
  (graph_numerator)
  (u.Delete["\""])
  (u.Delete[" frac: \"/\" "])
  (u.Insert["/"])
  (u.Delete["denominator: \""])
  (graph_denominator)
  (u.Delete["\" } }"])
  (u.delete_space)
);

export FRACTION_UNSTRUCTURED = Optimize[graph_fraction];
